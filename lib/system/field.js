import * as utils from '~/utils.js'

export default class Field {
  constructor(label, model) {
    this.label = label
    this.model = model || this._sample
    this.cb = () => {}
  }

  set to(cb) {
    this.cb = cb
  }

  get _sample() {
    return [
      [9, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 9, 0, 0, 0, 0, 0, 0],
      [8, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 8, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 8, 0, 0, 0, 0, 0, 0],
      [8, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 8, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 8, 0, 0, 0, 0, 0, 0],
      [8, 7, 0, 7, 7, 7, 7, 7, 7, 7, 7, 9, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 0, 0, 0, 0, 0, 0],
      [8, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 0, 0, 0, 0, 0, 0],
      [8, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 7, 7, 7, 7, 7, 9],
      [8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 8],
      [9, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 9, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 9, 1, 1, 1, 1, 1, 8],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 8],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 9],
    ]
  }

  shape(model) {
    return model.reduce((acc, cur) => {
      acc.push(cur.map(n => this._shapeType(n)))
      return acc
    }, [])
  }

  _shapeType(n) {
    switch(n) {
      case 0:
      return ' '
      case 1:
      return '~'
      case 6:
      return '■'
      case 7:
      return '─'
      case 8:
      return '|'
      case 9:
      return '+'
      default:
      return n
    }
  }

  render(model = this.model) {
    this.shape(model).forEach((rows, i) => this.cb(rows, i))
  }
}
